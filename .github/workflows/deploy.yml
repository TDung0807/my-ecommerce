name: Deploy to VPS
on:
  push:
    branches: [ main ]
permissions:
  contents: read
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 1) Enable emulation for cross-arch builds
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      # 2) Setup Buildx
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 3) Multi-arch build (amd64 + arm64)
      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: ./backend_app
          file: ./backend_app/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/tdung0807/my-ecommerce:latest

      - name: SSH and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd ~/trdung
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

            # verify manifest platforms pulled
            docker pull ghcr.io/tdung0807/my-ecommerce:latest

            # recreate with compose v2
            docker compose pull
            docker compose run --rm web bundle exec rails db:migrate
            docker compose up -d
          command_timeout: 60m
